version: '3.8'

services:
  redis_discord:
    container_name: redis-discord
    image: redis:latest
    ports: ["6379:6379"]
    networks: [backend]

  redis_wikipedia:
    container_name: redis-wikipedia
    image: redis:latest
    ports: ["6380:6379"]
    networks: [backend]

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    restart: always
    networks:
      - backend

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "kafka-wikipedia-group:1:1"
      KAFKA_CONTROLLER_SOCKET_TIMEOUT_MS: 10000
      KAFKA_ELECTION_TIMEOUT_MS: 8000
      KAFKA_UNCLEAN_LEADER_ELECTION_ENABLE: "true"
    networks:
      - backend

  discord_bot:
    container_name: discord-bot
    build:
      context: ..
      dockerfile: docker/Dockerfile.discord
    env_file:
      - ../config/discord_bot/.env
    ports:
      - "50051"
    depends_on: [kafka, redis_discord, wikipedia]
    restart: always
    networks:
      - backend

  wikipedia:
    container_name: wikipedia
    build:
      context: ..
      dockerfile: docker/Dockerfile.wikipedia
    env_file:
      - ../config/wikipedia/.env
    ports:
      - "50052"
    depends_on: [kafka, redis_wikipedia]
    restart: always
    networks:
      - backend

networks:
  backend: